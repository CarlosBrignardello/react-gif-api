{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","categ","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","cat","ReactDOM","render","document","getElementById"],"mappings":"6MA4BeA,EA1BK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAgC,KAAjBC,WAEEC,mBAAS,0BAFM,mBAE7CC,EAF6C,KAEjCC,EAFiC,KAarD,OACE,oCACA,0BAAMC,SAPa,SAAAC,GACnBA,EAAEC,iBACFP,GAAe,SAAAQ,GAAK,OAAML,GAAN,mBAAqBK,SAMvC,2BACEC,KAAK,OACLC,MAAOP,EACPQ,SAfoB,SAAAL,GACxBF,EAAeE,EAAEM,OAAOF,aCLfG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACvC,OACE,yBAAKC,UAAU,0CACb,2BAAKF,GACL,yBAAKG,IAAMF,EAAMG,IAAMJ,M,uBCNhBK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEkCC,UAAWH,GAF7C,+DAGFI,MAAOF,GAHL,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GACrB,MAAM,CACJjB,GAAIiB,EAAIjB,GACRC,MAAOgB,EAAIhB,MACXC,IAAKe,EAAIC,OAAOC,iBAAiBjB,QAThB,kBAYda,GAZc,4CAAH,sDCMPK,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEhBnB,mBAAS,CAC/B0B,KAAM,GACNO,SAAS,IAJ6B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAiB1C,OATAC,qBAAW,WACTlB,EAASC,GAAWkB,MAAM,SAAAC,GACxBH,EAAS,CACPT,KAAMY,EACNL,SAAS,SAGZ,CAACd,IAEGe,EDbmBK,CAAcpB,GAAhCO,EAF+B,EAE/BA,KAAMO,EAFyB,EAEzBA,QAGd,OACE,oCACA,gCAAMd,EAAN,KACEc,GAAW,cACb,yBAAKlB,UAAU,aAEXW,EAAKE,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,iBACMA,EADN,CAEEW,IAAKX,EAAIjB,YEWN6B,EA3BM,WAAO,IAAD,EAEazC,mBAAS,CAAC,yBAFvB,mBAEjBD,EAFiB,KAELD,EAFK,KAMzB,OACE,oCACE,6CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGA,4BAEIC,EAAW6B,KAAK,SAAEc,GAAF,OAChB,kBAAC,EAAD,CACEvB,SAAWuB,EACXF,IAAME,UChBlBC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.dee40f8a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddCategory = ({ setCategories, categories }) => {\r\n\r\n  const [ inputValue, setInputValue ] = useState('Ingresa una categoria')\r\n\r\n  const handleInputChange = e => {\r\n    setInputValue( e.target.value )\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    setCategories( categ => [ inputValue, ...categ  ] )\r\n  }\r\n\r\n  return ( \r\n    <>\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n    </>\r\n   );\r\n}\r\n \r\nexport default AddCategory;","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <p>{ title }</p>\r\n      <img src={ url } alt={ title }/>\r\n    </div>\r\n  )\r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n  const URL = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=2mFkDLzGzkjoLCesSfoqvNziOwipGLID`\r\n  const resp = await fetch( URL )\r\n  const { data } = await resp.json()\r\n  const gifs = data.map( img => {\r\n    return{\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url\r\n    }\r\n  })\r\n  return gifs\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data, loading } = useFetchGifs( category )\r\n\r\n\r\n  return (\r\n    <>\r\n    <h3> {category} </h3>\r\n    { loading && 'Cargando...' }\r\n    <div className=\"card-grid\">\r\n      {\r\n        data.map( img => (\r\n          <GifGridItem \r\n            {...img}\r\n            key={img.id}  \r\n          />\r\n        ))\r\n      }\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setstate] = useState({\r\n      data: [],\r\n      loading: true\r\n  })\r\n\r\n  \r\n  useEffect( () => {\r\n    getGifs( category ).then( imgs => {\r\n      setstate({\r\n        data: imgs,\r\n        loading: false\r\n      })\r\n    } )\r\n  }, [category], )\r\n  \r\n  return state\r\n}\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [ categories, setCategories ] = useState([\"Howl's Moving Castle\"])\r\n\r\n\r\n\r\n  return ( \r\n    <>\r\n      <h2>React Gif App</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n\r\n      <ol>\r\n        { \r\n          categories.map( ( cat ) => (\r\n          <GifGrid \r\n            category={ cat } \r\n            key={ cat }  \r\n          /> \r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n   );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}